import logging
from test_rest_api.reporting.report import ReportTestResultLog


class TestRestApiReportFormatter(logging.Formatter):
    """ Custom formatter class to format test rest api report log records """

    def __init__(self, datefmt: str = "%Y-%m-%d %H:%M:%S %z"):
        """ Initialize custom formatter class with custom date time format """
        # Call parent class constructor
        super().__init__()
        # Set date time format
        self.datefmt = datefmt

    def format(self, record: logging.LogRecord) -> ReportTestResultLog:
        """ Override format method of logging.Formatter class to return custom string of log record message """
        # Get log record message and strip extra spaces from both ends
        message = record.getMessage().strip()
        # Get log level
        level = record.levelname
        # Get current date time with formatting
        datetime = self.formatTime(record=record, datefmt=self.datefmt)
        # Set to True, if log record is auto generated by test rest api package
        internal = getattr(record, 'internal', False)
        # Create ReportTestResultLog object with log record details
        report_test_result_log: ReportTestResultLog = ReportTestResultLog(message=message,
                                                                          level=level,
                                                                          datetime=datetime,
                                                                          internal=internal)
        # Return ReportTestResultLog instance
        return report_test_result_log
